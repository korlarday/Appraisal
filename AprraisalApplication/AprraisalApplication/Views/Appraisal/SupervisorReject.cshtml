@model AprraisalApplication.Models.ViewModels.OngoingAppraisalVM

@{
    ViewBag.Title = "Supervisor Reject";
    int columns = Model.DefaultRatings.Count() + 1;
    int dutiesAssignCol = Model.DefaultRatings.Count() + 2;
    int ratingsCount = Model.DefaultRatings.Count();
    var sectionResult = Model.Appraisee.SectionResults;
}

@section Stylesheet{
    <style>
        #content-body {
            max-width: 1000px;
            margin: 20px auto;
            background-color: white;
            padding: 50px;
        }

        .table-bordered td, .table-bordered th {
            border: 1px solid grey;
        }

        .table thead th {
            border-bottom: 1px solid grey;
        }

        .titles {
            font-weight: bold;
        }

        .details {
            font-size: 14px;
        }

        .text-header {
            text-decoration: underline;
            text-transform: uppercase;
        }
        .hide{
            display:none !important;
        }
    </style>
}

<!-- Hero -->
<div class="bg-body-light">
    <div class="content content-full">
        <div class="d-flex flex-column flex-sm-row justify-content-sm-between align-items-sm-center">
            <h1 class="flex-sm-fill font-size-h2 font-w400 mt-2 mb-0 mb-sm-2">Ongoing Appraisal</h1>
            <nav class="flex-sm-00-auto ml-sm-3" aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">Home</li>
                    <li class="breadcrumb-item">Appraisal</li>
                    <li class="breadcrumb-item active" aria-current="page">Ongoing Appraisal</li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<!-- END Hero -->
<!-- Page Content -->
<div class="content">
    <!-- Elements -->
    <div class="block block-rounded block-bordered">
        <div class="block-header block-header-default">
            <h3 class="block-title">Ongoing Appraisal</h3>
        </div>
        <div class="block-content">
            <div class="block block-rounded">
                <div class="block-content block-content-full">
                    <span style="display:none" id="appraiseeId">@Model.Appraisee.Id</span>
                    <div class="row">
                        <div class="offset-6 text-danger">
                            <div style="font-weight:bold">Your appraisal form was rejected by your supervisor for corrections</div>
                            <div style="text-decoration:underline">Rejection reasons</div>
                            <div>
                                <ul>
                                    @foreach (var reason in Model.Appraisee.AppraiseeRejections.Where(x => x.RejectedByPosition == "supervisor").OrderByDescending(x => x.DateRejected))
                                    {
                                        <li>
                                            @reason.RejectionReason 
                                            @if (reason.New)
                                            {
                                                <span class="badge badge-warning">New</span>
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <h6 class="col-12 text-header">Personal Data: Appraisee</h6>
                        <div class="col-md-6 details">
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Name of Employee: </div>
                                    <div class="col-6">@Model.Employee.Firstname @Model.Employee.Lastname</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Date of Employment: </div>
                                    <div class="col-6">@Model.Employee.DateOfEmployment.ToString("dd-MMM-yyyy")</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Grade: </div>
                                    <div class="col-6 capitalize-text">@Model.Employee.Grade.Name</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <span class="col-6 titles">Appraisal Period: </span>
                                    <span class="col-6">
                                        @Model.NewAppraisal.AppraisalPeriodStartDate.ToString("MMM-yyyy")
                                        To
                                        @Model.NewAppraisal.AppraisalPeriodEndDate.ToString("MMM-yyyy")
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 details">
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Department: </div>
                                    <div class="col-6 capitalize-text">@Model.Employee.Department.Name</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Location: </div>
                                    <div class="col-6 capitalize-text">@Model.Employee.State.Description</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Date of Last Promotion: </div>
                                    <div class="col-6">
                                        @if (Model.Employee.DateOfLastPromotion != null)
                                        {
                                            @Model.Employee.DateOfLastPromotion.Value.ToString("dd-MMM-yyyy")
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Qualifications: </div>
                                    <div class="col-6 capitalize-text">
                                        @foreach (var item in Model.Employee.EmployeeQualifications)
                                        {
                                            <span>@item.Qualification.Name, </span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-5">
                        <h6 class="col-12 text-header">Personal Data: Appraiser</h6>
                        <div class="col-md-6 details">
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Appraiser's Name: </div>
                                    <div class="col-6">
                                        @Model.Appraisee.AppraiserPersonalData.Appraiser.Firstname
                                        @Model.Appraisee.AppraiserPersonalData.Appraiser.Lastname
                                    </div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Grade: </div>
                                    <div class="col-6 capitalize-text">@Model.Appraisee.AppraiserPersonalData.Appraiser.Grade.Name</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 details">
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Job Title: </div>
                                    <div class="col-6 capitalize-text">@Model.Appraisee.AppraiserPersonalData.JobTitle.Name</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Department: </div>
                                    <div class="col-6 capitalize-text">@Model.Appraisee.AppraiserPersonalData.Appraiser.Department.Name</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <h6 class="mt-4 text-header mt-5">Career history with the company</h6>
                        <div class="table-responsive mb-4 details">
                            <table class="table table-bordered table-vcenter">
                                <thead>
                                    <tr>
                                        <th style="width:40px;">S/N</th>
                                        <th style="width:110px">Date</th>
                                        <th style="width:150px">Department/Unit</th>
                                        <th style="width:130px">Grade</th>
                                        <th>Trainings Attended</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int num = 1;
                                        foreach (var training in Model.Appraisee.AppraiseeCareerHistoryWithCompanies.OrderByDescending(x => x.Date))
                                        {
                                            <tr>
                                                <th class="text-center">@num</th>
                                                <td>@training.Date.ToString("dd MMM yyyy")</td>
                                                <td class="capitalize-text">@training.Department.Name</td>
                                                <td class="capitalize-text">@training.Grade.Name</td>
                                                <td>@training.TrainingAttended</td>
                                            </tr>
                                            ++num;
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    @foreach (var templateSection in Model.InitiatedAppraisalTemplate.InitiatedTemplateSections.OrderBy(x => x.SetupId))
                    {
                        if (templateSection.IsDeleted == false)
                        {
                            var currentResultSection = sectionResult.Where(x => x.InitiatedTemplateSectionId == templateSection.Id).SingleOrDefault();
                            if (templateSection.SectionTypeId == 1)
                            {
                                <div class="section-item" data-sectionTypeId="1" data-sectionId="@templateSection.Id">
                                    <h5 class="mt-4">Section @templateSection.SetupId</h5>
                                    <div class="table-responsive mb-4 details">
                                        <table class="table table-bordered table-vcenter">
                                            <thead>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th rowspan="2" colspan="@columns">
                                                        <div class="font-size-h5 text-center">@templateSection.SectionTitle</div>
                                                        <div>@templateSection.SectionInstructions</div>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th class="text-center text-uppercase" style="width:70%;" scope="row">
                                                        @((templateSection.FirstColumnHeader != "")? templateSection.FirstColumnHeader: "tasks performed")
                                                    </th>
                                                    <th class="text-uppercase text-center" colspan="@ratingsCount">ratings</th>
                                                </tr>
                                                <tr>
                                                    <th class="text-center text-uppercase" scope="row"></th>
                                                    @foreach (var item in Model.DefaultRatings)
                                                    {
                                                        <th class="text-center">@item.Score</th>
                                                    }
                                                </tr>
                                                @foreach (var sectionDetail in currentResultSection.SectionDetailResults.OrderBy(x => x.Number))
                                                {
                                                    <tr class="task-row" data-sectionResultDetailId="@sectionDetail.Id">
                                                        <td class="pr-5">
                                                            <div class="row p-1">
                                                                <span class="col-1 count" style="position:relative;top:8px">@sectionDetail.Number.</span>
                                                                <input type="text" value="@sectionDetail.Title1" class="form-control col-10" style="display:inline !important" />
                                                                <button class="btn btn-link text-danger col-1 delete-row @(sectionDetail.Number == 1 ? "hide":"")" 
                                                                        data-toggle="tooltip" 
                                                                        title="Delete Row"
                                                                        data-sectionResultDetailId="@sectionDetail.Id"><i class="fa fa-times"></i></button>
                                                                
                                                            </div>
                                                        </td>
                                                        @foreach (var item in Model.DefaultRatings)
                                                        {
                                                            <td></td>
                                                        }
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                        <button class="btn btn-success btn-sm addTaskRow"><i class="fa fa-plus"></i> Add Row</button>
                                    </div>
                                </div>
                            }
                            else if (templateSection.SectionTypeId == 2)
                            {
                                <div class="section-item" data-sectionTypeId="2" data-sectionId="@templateSection.Id">
                                    <h5 class="mt-4">Section @templateSection.SetupId</h5>
                                    <div class="table-responsive mb-4">
                                        <table class="table table-bordered table-vcenter">
                                            <thead>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th rowspan="2" colspan="@dutiesAssignCol">
                                                        <div class="font-size-h5 text-center">@templateSection.SectionTitle</div>
                                                        <div>@templateSection.SectionInstructions</div>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th class="text-center text-uppercase" style="width:35%;">
                                                        @((templateSection.FirstColumnHeader != "")? templateSection.FirstColumnHeader: "duties assigned")
                                                    </th>
                                                    <th class="text-center text-uppercase" style="width: 35%;">
                                                        @((templateSection.SecondColumnHeader != "")? templateSection.SecondColumnHeader: "actual results achieved")
                                                    </th>
                                                    <th class="text-uppercase text-center" colspan="@ratingsCount">ratings</th>
                                                </tr>
                                                <tr>
                                                    <th class="text-center text-uppercase" scope="row"></th>
                                                    <th class="text-center text-uppercase" scope="row"></th>
                                                    @foreach (var item in Model.DefaultRatings)
                                                    {
                                                        <th class="text-center">@item.Score</th>
                                                    }
                                                </tr>
                                                @foreach (var sectionDetail in currentResultSection.SectionDetailResults.OrderBy(x => x.Number))
                                                {
                                                    <tr class="task-row" data-sectionResultDetailId="@sectionDetail.Id">
                                                        <td>
                                                            <div class="row p-1">
                                                                <span class="col-1 count" style="position:relative;top:8px">@sectionDetail.Number.</span>
                                                                <input type="text" value="@sectionDetail.Title1" class="form-control col-10 duties" style="display:inline !important" />
                                                            </div>
                                                        </td>
                                                        <td class="pl-4">
                                                            <div class="row">
                                                                <input type="text" value="@sectionDetail.Title2" class="form-control col-10 resultAchieved" style="display:inline !important" />
                                                                <button class="btn btn-link text-danger col-1 delete-row @(sectionDetail.Number == 1 ? "hide":"")" 
                                                                        data-toggle="tooltip" 
                                                                        title="Delete Row"
                                                                        data-sectionResultDetailId="@sectionDetail.Id"><i class="fa fa-times"></i></button>
                                                            </div>
                                                        </td>
                                                        @foreach (var item in Model.DefaultRatings)
                                                        {
                                                            <td></td>
                                                        }
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                        <button class="btn btn-success btn-sm addTaskRow"><i class="fa fa-plus"></i> Add Row</button>
                                    </div>
                                </div>
                            }
                            else if (templateSection.SectionTypeId == 3)
                            {
                                <div class="section-item" data-sectionTypeId="3" data-sectionId="@templateSection.Id">
                                    <h5 class="mt-4">Section @templateSection.SetupId</h5>
                                    <div class="table-responsive mb-4">
                                        <span class="breakdown-value" style="display:none">@templateSection.BreakdownValueBy</span>
                                        <table class="table table-bordered table-vcenter">
                                            <thead>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th rowspan="2" colspan="4">
                                                        <div class="font-size-h5 text-center">@templateSection.SectionTitle</div>
                                                        <div>@templateSection.SectionInstructions</div>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th>S/N</th>
                                                    <th class="text-center text-uppercase" style="width:70%;" scope="row">
                                                        @((templateSection.FirstColumnHeader != "")? templateSection.FirstColumnHeader: "values")
                                                    </th>
                                                    <th class="text-center">MAX SCORE</th>
                                                    <th class="text-uppercase text-center">MARK OBTAINED</th>
                                                </tr>
                                                @{
                                                    int count = 1;
                                                    foreach (var detail in templateSection.InitiatedSectionDetails)
                                                    {
                                                        var detailResult = currentResultSection.SectionDetailResults.Where(x => x.SectionDetailId == detail.Id).SingleOrDefault();
                                                        <tr class="quantitative-values" data-sectionResultDetailId="@detail.Id">
                                                            <td>@count</td>
                                                            <td data-sectionDetailId="@detail.Id" class="section-detail">
                                                                <span class="detail-title">@detail.Title1</span>
                                                                <div>
                                                                    <ul>
                                                                        @foreach (var breakdown in detail.InitiatedSectionDetailBreakdowns)
                                                                        {
                                                                            var result = detailResult.ItemBreakdownResults.Where(x => x.InitiatedSectionDetailBreakdownId == breakdown.Id).SingleOrDefault();
                                                                            <li class="mt-1">
                                                                                <span class="breakdown-title">@breakdown.Title</span>
                                                                                @if (templateSection.BreakdownValueBy == "appraisee")
                                                                                {
                                                                                    <input type="number" data-breakdownId="@result.Id" value="@result.Value" class="form-control ml-4 input-breakdown" style="width:200px;display:inline;" />
                                                                                }
                                                                            </li>
                                                                        }
                                                                    </ul>
                                                                </div>
                                                            </td>
                                                            <td class="text-center">@detail.MaxScore</td>
                                                            <td></td>
                                                        </tr>
                                                        ++count;
                                                    }
                                                }
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <td class="text-right font-w700" colspan="2">Mark Obtainable</td>
                                                    <td class="text-center font-w700">@templateSection.TotalMarkObtainable</td>
                                                    <td colspan="@ratingsCount" class="text-center font-w700"></td>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                            }
                            else if (templateSection.SectionTypeId == 4)
                            {
                                <div class="section-item" data-sectionTypeId="4" data-sectionId="@templateSection.Id">
                                    <h5 class="mt-4">Section @templateSection.SetupId</h5>
                                    <div class="table-responsive mb-4">
                                        <table class="table table-bordered table-vcenter">
                                            <thead>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th rowspan="2" colspan="@dutiesAssignCol">
                                                        <div class="font-size-h5 text-center">@templateSection.SectionTitle</div>
                                                        <div>@templateSection.SectionInstructions</div>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th class="text-center text-uppercase" style="width:65%;" scope="row">
                                                        @((templateSection.FirstColumnHeader != "")? templateSection.FirstColumnHeader: "values")
                                                    </th>
                                                    <th class="text-center" style="width:70px">Weight</th>
                                                    <th class="text-uppercase text-center" colspan="@ratingsCount">ratings</th>
                                                </tr>
                                                <tr>
                                                    <th scope="row"></th>
                                                    <td></td>
                                                    @foreach (var item in Model.DefaultRatings)
                                                    {
                                                        <th class="text-center">@item.Score</th>
                                                    }
                                                </tr>
                                                @foreach (var detail in templateSection.InitiatedSectionDetails)
                                                {
                                                    <tr>
                                                        <td>@detail.Title1</td>
                                                        <td class="text-center">@detail.MaxScore</td>
                                                        @foreach (var item in Model.DefaultRatings)
                                                        {
                                                            <td></td>
                                                        }
                                                    </tr>
                                                }
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <td class="text-right font-w700">Mark Obtainable</td>
                                                    <td class="text-center font-w700">@templateSection.TotalMarkObtainable</td>
                                                    <td colspan="@ratingsCount" class="text-center font-w700">Mark Obtained =</td>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                            }
                        }
                    }

                    <div class="row mt-4">
                        <div style="margin:auto">
                            <button class="btn btn-primary" id="submitAppraisal">
                                Submit Appraisal
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END Elements -->
</div>


@section Scripts {

    <script>
        $(function () {
            var $texts = $(".capitalize-text");
            $.each($texts, function () {
                $(this).text(capitalize($(this).text()));
            })
            function capitalize(text) {
                return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();
            }
            $("#startAppraisal").on("click", function () {
                var $this = $(this);
                var $employeeId = $this.attr("data-employeeId");
                var $newAppraisalId = $this.attr("data-newAppraisalId");

                $this.attr("disabled", true);
                Dashmix.layout('header_loader_on');

                var url = '/api/appraisal/PostStartEmployeeAppraisal';
                $.post(url,
                    {
                        employeeId: $employeeId,
                        newAppraisalId: $newAppraisalId,
                    },
                    function (data) {
                        Dashmix.layout('header_loader_off');
                        $this.attr("disabled", false);
                        if (data == "exists") {
                            Swal.fire({
                                title: "Success",
                                text: "Appraisal exercise has already been initiated",
                                type: "success",
                                showCancelButton: 0,
                                customClass: { okButton: "btn btn-danger m-1" },
                                html: !1,
                                preConfirm: function (e) { return new Promise(function (e) { setTimeout(function () { e() }, 50) }) }

                            }).then(function (n) {
                                if (n.value) {
                                    window.location.href = '/appraisal/ongoing-appraisal';
                                }
                            });
                        }
                        else if (data == "no appraiser") {
                            Swal.fire("Oops...", "Your appraisal supervisor has not been selected", "error");
                        }
                        else if (data == "no template") {
                            Swal.fire("Oops...", "Your appraisal template has not been selected", "error");
                        }
                        else if (data == "initialized") {
                            Swal.fire({
                                title: "Success",
                                text: "Appraisal exercise has been initiated",
                                type: "success",
                                showCancelButton: 0,
                                customClass: { okButton: "btn btn-danger m-1" },
                                html: !1,
                                preConfirm: function (e) { return new Promise(function (e) { setTimeout(function () { e() }, 50) }) }

                            }).then(function (n) {
                                if (n.value) {
                                    window.location.href = '/appraisal/ongoing-appraisal';
                                }
                            });
                        }
                        else if (data == "failed") {
                            Swal.fire({
                                title: "Failed",
                                text: "Sorry something went wrong while initializing your appraisal",
                                type: "failed",
                                showCancelButton: 0,
                                customClass: { okButton: "btn btn-danger m-1" },
                                html: !1,
                                preConfirm: function (e) { return new Promise(function (e) { setTimeout(function () { e() }, 50) }) }

                            }).then(function (n) {
                                if (n.value) {
                                    window.location.href = '/appraisal/ongoing-appraisal';
                                }
                            });
                        }

                    });
            });

            // when you click on add row (for task performed)
            $(".addTaskRow").on("click", function () {
                var $this = $(this);
                var $tr = $this.closest("div").find("table tbody tr.task-row:first").clone();
                var $rows = $this.closest("div").find("table tbody tr.task-row");

                var $numbersTaken = [];
                var $length = $rows.length + 2;

                $.each($rows, function () {
                    var $num = parseInt($(this).find(".count").text().replace('.', ''));
                    $numbersTaken.push($num);
                });
                var $rowCount = 0;
                for (var i = 1; i < $length; i++) {
                    if (!$numbersTaken.includes(i)) {
                        $rowCount = i;
                        break;
                    }
                }

                var $count = $tr.find(".count").text();
                $count = parseInt($count.replace('.', '')) + 1;
                $tr.find("input").val("");
                $tr.find(".count").text($rowCount + ".");
                $tr.find(".delete-row").removeClass("hide");
                $tr.find(".delete-row").removeAttr("data-sectionResultDetailId");
                $tr.removeAttr("data-sectionResultDetailId");
                $tr.find(".delete-row").show();
                $this.closest("div").find("table tbody").append($tr);
            });

            // when you click on add row (for duties)
            //$(".addDutiesRow").on("click", function () {

            //})data-sectionResultDetailId

            // when you click on remove row for task performed
            $("tbody").on("click", ".delete-row", function () {
                var $this = $(this);
                var $sectionResultDetailId = $this.attr("data-sectionResultDetailId");
                if ($sectionResultDetailId == null || isNaN($sectionResultDetailId)) {
                    $this.closest("tr").remove();
                } else {
                    Swal.fire({
                        title: "Are you sure?",
                        text: "Are you sure you want to remove the item?",
                        type: "warning",
                        showCancelButton: !0,
                        customClass: { confirmButton: "btn btn-danger m-1", cancelButton: "btn btn-secondary m-1" },
                        confirmButtonText: "Yes, Delete it!",
                        html: !1,
                        preConfirm: function (e) { return new Promise(function (e) { setTimeout(function () { e() }, 50) }) }

                    }).then(function (n) {
                        if (n.value) {
                            var $appraiseeId = parseInt($("#appraiseeId").text());
                            var url = "/api/Appraisal/PostRemoveSectionResultDetail";

                            $.post(url, {
                                sectionResultDetailId: $sectionResultDetailId
                            }, function (data) {
                                $this.closest("tr").remove();
                            });
                        }
                        else {
                            "cancel" === n.dismiss && Swal.fire("Cancelled", "cancelled", "error")
                        }
                    });
                }
            })

            // when you click on submit appraisal
            $("#submitAppraisal").on("click", function () {
                var $sections = $(".section-item");
                var $valid = true;
                var $quatitativeValid = true;
                var $quatitativeFilledBy = '';
                var $sectionResults = [];
                $.each($sections, function () {
                    var $sectionTypeId = $(this).attr("data-sectionTypeId");
                    var $sectionId = $(this).attr("data-sectionId");
                    if ($sectionTypeId == 1) {
                        var $taskAssignedArray = []

                        var $rows = $(this).find("table tbody tr.task-row");
                        $.each($rows, function () {
                            var $task = $(this).find("td input").val();
                            var $sectionDetailResultId = $(this).attr("data-sectionResultDetailId");
                            var $count = parseInt($(this).find(".count").text().replace('.', ''));
                            if ($task == '') {
                                $valid = false;
                            }
                            var obj = {
                                task: $task,
                                taskResult: '',
                                number: $count,
                                sectionDetailResultId: $sectionDetailResultId
                            }
                            $taskAssignedArray.push(obj);
                        });

                        var $taskPerfomed = {
                            sectionId: $sectionId,
                            taskPerformed: $taskAssignedArray
                        }
                        $sectionResults.push($taskPerfomed);
                    }
                    else if ($sectionTypeId == 2) {
                        var $taskAssignedArray = []

                        var $rows = $(this).find("table tbody tr.task-row");
                        $.each($rows, function () {
                            var $task = $(this).find("td input.duties").val();
                            var $sectionDetailResultId = $(this).attr("data-sectionResultDetailId");
                            var $resultAchieved = $(this).find("td input.resultAchieved").val();
                            var $count = parseInt($(this).find(".count").text().replace('.', ''));
                            if ($task == '' || $resultAchieved == '') {
                                $valid = false;
                            }
                            var obj = {
                                task: $task,
                                taskResult: $resultAchieved,
                                number: $count,
                                sectionDetailResultId: $sectionDetailResultId
                            }
                            $taskAssignedArray.push(obj);
                        });

                        var $taskPerfomed = {
                            sectionId: $sectionId,
                            taskPerformed: $taskAssignedArray
                        }
                        $sectionResults.push($taskPerfomed);
                    }
                    else if ($sectionTypeId == 3) {
                        var $ValuesArray = []
                        var $breakdownValue = $(this).find('.breakdown-value').text();
                        $quatitativeFilledBy = $breakdownValue;
                        var $rows = $(this).find("table tbody tr.quantitative-values");
                        $.each($rows, function () {
                            var $breakdowns = $(this).find("input");
                            var $sectionDetailResultId = $(this).attr("data-sectionResultDetailId");
                            var $breakdownArray = [];
                            $.each($breakdowns, function () {
                                var $breakdownValue = $(this).val();
                                var $text = $(this).closest("li").find(".breakdown-title").text();
                                var $breakdownId = parseInt($(this).attr("data-breakdownId"));
                                var obj = {
                                    breakdownValue: $breakdownValue,
                                    breakdownText: $text,
                                    breakdownId: $breakdownId
                                }
                                $breakdownArray.push(obj);
                            });
                            if ($(this).find("input").val() == '') {
                                $quatitativeValid = false;
                            }

                            var $detailTitle = $(this).find(".detail-title").text();
                            var $detailId = parseInt($(this).find(".section-detail").attr("data-sectionDetailId"));
                            var obj = {
                                sectionDetailResultId: $sectionDetailResultId,
                                task: $detailTitle,
                                taskResult: '',
                                number: $detailId,
                                breakdowns: $breakdownArray
                            }
                            $ValuesArray.push(obj);
                        });
                        var $taskPerfomed = {
                            sectionId: $sectionId,
                            taskPerformed: $ValuesArray
                        }
                        $sectionResults.push($taskPerfomed);
                    }
                    else if ($sectionTypeId == 4) {
                        var $taskPerfomed = {
                            sectionId: $sectionId,
                            taskPerformed: []
                        }
                        $sectionResults.push($taskPerfomed);
                    }
                });

                if (!$valid) {
                    Swal.fire("Error!", "One or more empty fields detected.", "error");
                    return;
                }
                if ($quatitativeFilledBy == "appraisee") {
                    if (!$quatitativeValid) {
                        Swal.fire("Error!", "One or more empty fields detected in the quantitavie section.", "error");
                        return;
                    }
                }
                console.log($sectionResults);
                Swal.fire({
                    title: "Are you sure?",
                    text: "Are you sure you want to submit the appraisal to your supervisor?",
                    type: "warning",
                    showCancelButton: !0,
                    customClass: { confirmButton: "btn btn-danger m-1", cancelButton: "btn btn-secondary m-1" },
                    confirmButtonText: "Yes, Submit it!",
                    html: !1,
                    preConfirm: function (e) { return new Promise(function (e) { setTimeout(function () { e() }, 50) }) }

                }).then(function (n) {
                    if (n.value) {
                        var $appraiseeId = parseInt($("#appraiseeId").text());
                        var url = "/api/Appraisal/PostResubmitAppraisalToSupervisor";

                        $.post(url, {
                            appraiseeId: $appraiseeId,
                            sectionResults: $sectionResults
                        }, function (data) {
                            Swal.fire({
                                title: "Success",
                                text: "Your appraisal has been resubmitted to your supervisor",
                                type: "success",
                                showCancelButton: 0,
                                customClass: { okButton: "btn btn-danger m-1" },
                                html: !1,
                                preConfirm: function (e) { return new Promise(function (e) { setTimeout(function () { e() }, 50) }) }

                            }).then(function (n) {
                                if (n.value) {
                                    window.location.href = '/appraisal/ongoing-appraisals-all';
                                }
                            });
                        });
                    }
                    else {
                        "cancel" === n.dismiss && Swal.fire("Cancelled", "Submission cancelled", "error")
                    }
                });
            });
        })
                                ////////////////////////////////////////////////////////////////////
    </script>
}

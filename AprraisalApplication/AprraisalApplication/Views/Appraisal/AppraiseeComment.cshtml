@model AprraisalApplication.Models.ViewModels.OngoingAppraisalVM


@{
    ViewBag.Title = "Appraisee Comment";
    int columns = Model.DefaultRatings.Count() + 1;
    int dutiesAssignCol = Model.DefaultRatings.Count() + 2;
    int ratingsCount = Model.DefaultRatings.Count();
    var sectionResult = Model.Appraisee.SectionResults;
    var highestRating = Model.DefaultRatings.OrderByDescending(x => x.Score).FirstOrDefault();
    double totalPercentageScore = 0;
    var rejections = Model.Appraisee.AppraiseeRejections.Where(x => x.RejectTo == "appraisee" && x.New == true).OrderByDescending(x => x.DateRejected).ToList();
}

@section Stylesheet{
    <style>
        #content-body {
            max-width: 1000px;
            margin: 20px auto;
            background-color: white;
            padding: 50px;
        }

        .table-bordered td, .table-bordered th {
            border: 1px solid grey;
        }

        .table thead th {
            border-bottom: 1px solid grey;
        }

        .titles {
            font-weight: bold;
        }

        .details {
            font-size: 14px;
        }

        .text-header {
            text-decoration: underline;
            text-transform: uppercase;
        }

        td.task-performed-rate:hover {
            cursor: pointer;
            background-color: antiquewhite;
        }

        td.qualitative-rate:hover {
            cursor: pointer;
            background-color: antiquewhite;
        }

        td.duties-assigned:hover {
            cursor: pointer;
            background-color: antiquewhite;
        }

        td.check {
            background: url("../../Images/checkmark.png") center center no-repeat;
            background-size: 25px;
        }

        .score {
            border-bottom: 1px solid black;
            text-align: center;
        }
    </style>
}

<!-- Hero -->
<div class="bg-body-light">
    <div class="content content-full">
        <div class="d-flex flex-column flex-sm-row justify-content-sm-between align-items-sm-center">
            <h1 class="flex-sm-fill font-size-h2 font-w400 mt-2 mb-0 mb-sm-2">Appraisal</h1>
            <nav class="flex-sm-00-auto ml-sm-3" aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item">Home</li>
                    <li class="breadcrumb-item">Appraisal</li>
                    <li class="breadcrumb-item active" aria-current="page">Comment on appraisal</li>
                </ol>
            </nav>
        </div>
    </div>
</div>
<!-- END Hero -->
<!-- Page Content -->
<div class="content">
    <!-- Elements -->
    <div class="block block-rounded block-bordered">
        <div class="block-header block-header-default">
            <h3 class="block-title">Enter Comments</h3>
        </div>
        <div class="block-content">
            <div class="block block-rounded">
                <div class="block-content block-content-full">
                    <span style="display:none" id="appraiseeId">@Model.Appraisee.Id</span>
                    <span style="display:none" id="highestRating">@highestRating.Score</span>
                    @if(rejections.Count() > 0)
                    {
                        <div class="row">
                            <div class="col-8 text-danger">
                                <div style="font-weight:bold">Your appraisal form was rejected for corrections</div>
                                <div style="text-decoration:underline">Rejection reasons</div>
                                <div>
                                    <ul>
                                        @foreach (var reason in rejections)
                                        {
                                            <li>
                                                @reason.RejectionReason (From @reason.RejectedByPosition)
                                                @if (reason.New)
                                                {
                                                    <span class="badge badge-warning">New</span>
                                                }
                                            </li>
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>

                    }
                    <div class="row">
                        <h6 class="col-12 text-header">Personal Data: Appraisee</h6>
                        <div class="col-md-6 details">
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Name of Employee: </div>
                                    <div class="col-6">@Model.Employee.Firstname @Model.Employee.Lastname</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Date of Employment: </div>
                                    <div class="col-6">@Model.Employee.DateOfEmployment.ToString("dd-MMM-yyyy")</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Grade: </div>
                                    <div class="col-6 capitalize-text">@Model.Employee.Grade.Name</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <span class="col-6 titles">Appraisal Period: </span>
                                    <span class="col-6">
                                        @Model.NewAppraisal.AppraisalPeriodStartDate.ToString("MMM-yyyy")
                                        To
                                        @Model.NewAppraisal.AppraisalPeriodEndDate.ToString("MMM-yyyy")
                                    </span>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 details">
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Department: </div>
                                    <div class="col-6 capitalize-text">@Model.Employee.Department.Name</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Location: </div>
                                    <div class="col-6 capitalize-text">@Model.Employee.State.Description</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Date of Last Promotion: </div>
                                    <div class="col-6">
                                        @if (Model.Employee.DateOfLastPromotion != null)
                                        {
                                            @Model.Employee.DateOfLastPromotion.Value.ToString("dd-MMM-yyyy")
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Qualifications: </div>
                                    <div class="col-6 capitalize-text">
                                        @foreach (var item in Model.Employee.EmployeeQualifications)
                                        {
                                            <span>@item.Qualification.Name, </span>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row mt-5">
                        <h6 class="col-12 text-header">Personal Data: Appraiser</h6>
                        <div class="col-md-6 details">
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Appraiser's Name: </div>
                                    <div class="col-6">
                                        @Model.Appraisee.AppraiserPersonalData.Appraiser.Firstname
                                        @Model.Appraisee.AppraiserPersonalData.Appraiser.Lastname
                                    </div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Grade: </div>
                                    <div class="col-6 capitalize-text">@Model.Appraisee.AppraiserPersonalData.Appraiser.Grade.Name</div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 details">
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Job Title: </div>
                                    <div class="col-6 capitalize-text">@Model.Appraisee.AppraiserPersonalData.JobTitle.Name</div>
                                </div>
                            </div>
                            <div class="mt-4">
                                <div class="row">
                                    <div class="col-6 titles">Department: </div>
                                    <div class="col-6 capitalize-text">@Model.Appraisee.AppraiserPersonalData.Appraiser.Department.Name</div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <h6 class="mt-4 text-header mt-5">Career history with the company</h6>
                        <div class="table-responsive mb-4 details">
                            <table class="table table-bordered table-vcenter">
                                <thead>
                                    <tr>
                                        <th style="width:40px;">S/N</th>
                                        <th style="width:110px">Date</th>
                                        <th style="width:150px">Department/Unit</th>
                                        <th style="width:130px">Grade</th>
                                        <th>Trainings Attended</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int num = 1;
                                        foreach (var training in Model.Appraisee.AppraiseeCareerHistoryWithCompanies.OrderByDescending(x => x.Date))
                                        {
                                            <tr>
                                                <th class="text-center">@num</th>
                                                <td>@training.Date.ToString("dd MMM yyyy")</td>
                                                <td class="capitalize-text">@training.Department.Name</td>
                                                <td class="capitalize-text">@training.Grade.Name</td>
                                                <td>@training.TrainingAttended</td>
                                            </tr>
                                            ++num;
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    @foreach (var templateSection in Model.InitiatedAppraisalTemplate.InitiatedTemplateSections.OrderBy(x => x.SetupId))
                    {
                        if (templateSection.IsDeleted == false)
                        {
                            var currentResultSection = sectionResult.Where(x => x.InitiatedTemplateSectionId == templateSection.Id).SingleOrDefault();
                            if (templateSection.SectionTypeId == 1)
                            {
                                totalPercentageScore += currentResultSection.PercentageScore;
                                <div class="section-item"
                                     data-sectionTypeId="1"
                                     data-sectionId="@currentResultSection.Id"
                                     data-percentageScore="@templateSection.TotalPercentageObtainable"
                                     data-obtainableScore="@templateSection.TotalMarkObtainable">

                                    <h5 class="mt-4">Section @templateSection.SetupId</h5>
                                    <div class="table-responsive mb-4 details">
                                        <table class="table table-bordered table-vcenter">
                                            <thead>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th rowspan="2" colspan="@columns">
                                                        <div class="font-size-h5 text-center">@templateSection.SectionTitle</div>
                                                        <div>@templateSection.SectionInstructions</div>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th class="text-center text-uppercase" style="width:70%;" scope="row">
                                                        @((templateSection.FirstColumnHeader != "")? templateSection.FirstColumnHeader: "tasks performed")
                                                    </th>
                                                    <th class="text-uppercase text-center" colspan="@ratingsCount">ratings</th>
                                                </tr>
                                                <tr>
                                                    <th class="text-center text-uppercase" scope="row"></th>
                                                    @foreach (var item in Model.DefaultRatings)
                                                    {
                                                        <th class="text-center">@item.Score</th>
                                                    }
                                                </tr>
                                                @foreach (var sectionDetail in currentResultSection.SectionDetailResults.OrderBy(x => x.Number))
                                                {
                                                    <tr class="task-row" data-sectionResultDetailId="@sectionDetail.Id">
                                                        <td class="pr-5">
                                                            <div class="row p-1">
                                                                <span class="col-1 count" style="">@sectionDetail.Number.</span>
                                                                <span>@sectionDetail.Title1</span>
                                                                @*<button style="display:none" class="btn btn-link text-danger col-1 delete-row" data-toggle="tooltip" title="Delete Row"><i class="fa fa-times"></i></button>*@
                                                            </div>
                                                        </td>
                                                        @foreach (var item in Model.DefaultRatings)
                                                        {
                                                            <td class="@(sectionDetail.Score == item.Score? "check": "")"></td>
                                                        }
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="row score-section">
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-4">Total Score:</div>
                                                <div class="col-2 totalScore score">@currentResultSection.TotalScore</div>/
                                                <div class="col-2 score">@templateSection.TotalMarkObtainable</div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-5">Percentage Score:</div>
                                                <div class="col-2 percentageScore score">@currentResultSection.PercentageScore</div>/
                                                @{
                                                    var sectionPercentage = templateSection.TotalPercentageObtainable;
                                                    var templateSectionSetupId = templateSection.SetupId;
                                                    var childSection = Model.InitiatedAppraisalTemplate.InitiatedTemplateSections
                                                                        .Where(x => x.IsDeleted == false &&
                                                                                x.DerivedSectionSetupId == templateSectionSetupId)
                                                                        .FirstOrDefault();
                                                    if (childSection != null)
                                                    {
                                                        var childResult = sectionResult.Where(x => x.InitiatedTemplateSectionId == childSection.Id).SingleOrDefault();
                                                        if (childResult.SectionFilled)
                                                        {
                                                            sectionPercentage = templateSection.TotalPercentageObtainable - childSection.TotalPercentageObtainable;
                                                        }
                                                    }
                                                }
                                                <div class="col-2 score percentageObtainable">@sectionPercentage %</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <hr />
                            }
                            else if (templateSection.SectionTypeId == 2)
                            {
                                totalPercentageScore += currentResultSection.PercentageScore;
                                <div class="section-item"
                                     data-sectionTypeId="2"
                                     data-sectionId="@currentResultSection.Id"
                                     data-percentageScore="@templateSection.TotalPercentageObtainable"
                                     data-obtainableScore="@templateSection.TotalMarkObtainable">
                                    <h5 class="mt-4">Section @templateSection.SetupId</h5>
                                    <div class="table-responsive mb-4">
                                        <table class="table table-bordered table-vcenter">
                                            <thead>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th rowspan="2" colspan="@dutiesAssignCol">
                                                        <div class="font-size-h5 text-center">@templateSection.SectionTitle</div>
                                                        <div>@templateSection.SectionInstructions</div>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th class="text-center text-uppercase" style="width:35%;">
                                                        @((templateSection.FirstColumnHeader != "")? templateSection.FirstColumnHeader: "duties assigned")
                                                    </th>
                                                    <th class="text-center text-uppercase" style="width: 35%;">
                                                        @((templateSection.SecondColumnHeader != "")? templateSection.SecondColumnHeader: "actual results achieved")
                                                    </th>
                                                    <th class="text-uppercase text-center" colspan="@ratingsCount">ratings</th>
                                                </tr>
                                                <tr>
                                                    <th class="text-center text-uppercase" scope="row"></th>
                                                    <th class="text-center text-uppercase" scope="row"></th>
                                                    @foreach (var item in Model.DefaultRatings)
                                                    {
                                                        <th class="text-center">@item.Score</th>
                                                    }
                                                </tr>
                                                @foreach (var sectionDetail in currentResultSection.SectionDetailResults.OrderBy(x => x.Number))
                                                {
                                                    <tr class="task-row" data-sectionResultDetailId="@sectionDetail.Id">
                                                        <td>
                                                            <div class="row p-1">
                                                                <span class="col-1 count mr-2">@sectionDetail.Number.</span>
                                                                <span>@sectionDetail.Title1</span>
                                                            </div>
                                                        </td>
                                                        <td class="pl-4">
                                                            <div class="row">
                                                                <span>@sectionDetail.Title2</span>
                                                            </div>
                                                        </td>
                                                        @foreach (var item in Model.DefaultRatings)
                                                        {
                                                            <td class="@(sectionDetail.Score == item.Score? "check": "")"></td>
                                                        }
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                    <div class="row score-section">
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-4">Total Score:</div>
                                                <div class="col-2 totalScore score">@currentResultSection.TotalScore</div>/
                                                <div class="col-2 score">@templateSection.TotalMarkObtainable</div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-5">Percentage Score:</div>
                                                <div class="col-2 percentageScore score">@currentResultSection.PercentageScore</div>/
                                                @{
                                                    var sectionPercentage = templateSection.TotalPercentageObtainable;
                                                    var templateSectionSetupId = templateSection.SetupId;
                                                    var childSection = Model.InitiatedAppraisalTemplate.InitiatedTemplateSections
                                                                        .Where(x => x.IsDeleted == false &&
                                                                                x.DerivedSectionSetupId == templateSectionSetupId)
                                                                        .FirstOrDefault();
                                                    if (childSection != null)
                                                    {
                                                        var childResult = sectionResult.Where(x => x.InitiatedTemplateSectionId == childSection.Id).SingleOrDefault();
                                                        if (childResult.SectionFilled)
                                                        {
                                                            sectionPercentage = templateSection.TotalPercentageObtainable - childSection.TotalPercentageObtainable;
                                                        }
                                                    }
                                                }
                                                <div class="col-2 score percentageObtainable">@sectionPercentage %</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <hr />
                            }
                            else if (templateSection.SectionTypeId == 3)
                            {
                                totalPercentageScore += currentResultSection.PercentageScore;
                                <div class="section-item"
                                     data-sectionTypeId="3"
                                     data-sectionId="@currentResultSection.Id"
                                     data-percentageScore="@templateSection.TotalPercentageObtainable"
                                     data-obtainableScore="@templateSection.TotalMarkObtainable">

                                    <h5 class="mt-4">Section @templateSection.SetupId</h5>
                                    <div class="table-responsive mb-4">
                                        <span class="breakdown-value" style="display:none">@templateSection.BreakdownValueBy</span>
                                        <table class="table table-bordered table-vcenter">
                                            <thead>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th rowspan="2" colspan="4">
                                                        <div class="font-size-h5 text-center">@templateSection.SectionTitle</div>
                                                        <div>@templateSection.SectionInstructions</div>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th>S/N</th>
                                                    <th class="text-center text-uppercase" style="width:70%;" scope="row">
                                                        @((templateSection.FirstColumnHeader != "")? templateSection.FirstColumnHeader: "values")
                                                    </th>
                                                    <th class="text-center">MAX SCORE</th>
                                                    <th class="text-uppercase text-center">MARK OBTAINED</th>
                                                </tr>
                                                @{
                                                    int count = 1;
                                                    foreach (var detail in templateSection.InitiatedSectionDetails)
                                                    {
                                                        var detailResult = currentResultSection.SectionDetailResults.Where(x => x.SectionDetailId == detail.Id).SingleOrDefault();
                                                        <tr class="quantitative-values" data-sectionResultDetailId="@detailResult.Id">
                                                            <td>@count</td>
                                                            <td data-sectionDetailId="@detail.Id" class="section-detail">
                                                                <span class="detail-title">@detail.Title1</span>
                                                                <div class="row">
                                                                    <div class="col-2 offset-10 font-weight-bolder">Score</div>
                                                                </div>
                                                                <div>
                                                                    <ul>
                                                                        @foreach (var breakdown in detail.InitiatedSectionDetailBreakdowns)
                                                                        {
                                                                            var result = detailResult.ItemBreakdownResults.Where(x => x.InitiatedSectionDetailBreakdownId == breakdown.Id).SingleOrDefault();
                                                                            <li class="mt-1 row">
                                                                                <div class="col-10">
                                                                                    <span class="breakdown-title">@breakdown.Title</span>
                                                                                    <input type="number" data-breakdownId="@breakdown.Id" value="@result.Value" class="form-control ml-4 input-breakdown" style="width:120px;@(breakdown.ExpectedValueId == 3 ? "display:none":"display:inline;")" disabled />
                                                                                </div>
                                                                                <div class="col-2">
                                                                                    @if (breakdown.IsScore)
                                                                                    {
                                                                                        <span><b>@result.Score</b>/@breakdown.MaxScore</span>
                                                                                    }
                                                                                </div>
                                                                            </li>
                                                                        }
                                                                    </ul>
                                                                </div>
                                                            </td>
                                                            <td class="text-center max-score">@detail.MaxScore</td>
                                                            <td class="text-center font-size-h4 font-w700">
                                                                @detailResult.Score
                                                            </td>
                                                        </tr>
                                                        ++count;
                                                    }
                                                }
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <td class="text-right font-w700" colspan="2">Mark Obtainable</td>
                                                    <td class="text-center font-w700">@templateSection.TotalMarkObtainable</td>
                                                    <td colspan="@ratingsCount" class="text-center font-w700"></td>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                    <div class="row score-section">
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-4">Total Score:</div>
                                                <div class="col-2 totalScore score">@currentResultSection.TotalScore</div>/
                                                <div class="col-2 score">@templateSection.TotalMarkObtainable</div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-5">Percentage Score:</div>
                                                <div class="col-2 percentageScore score">@currentResultSection.PercentageScore</div>/
                                                @{
                                                    var sectionPercentage = templateSection.TotalPercentageObtainable;
                                                    var templateSectionSetupId = templateSection.SetupId;
                                                    var childSection = Model.InitiatedAppraisalTemplate.InitiatedTemplateSections
                                                                        .Where(x => x.IsDeleted == false &&
                                                                                x.DerivedSectionSetupId == templateSectionSetupId)
                                                                        .FirstOrDefault();
                                                    if (childSection != null)
                                                    {
                                                        var childResult = sectionResult.Where(x => x.InitiatedTemplateSectionId == childSection.Id).SingleOrDefault();
                                                        if (childResult.SectionFilled)
                                                        {
                                                            sectionPercentage = templateSection.TotalPercentageObtainable - childSection.TotalPercentageObtainable;
                                                        }
                                                    }
                                                }
                                                <div class="col-2 score percentageObtainable">@sectionPercentage %</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <hr />
                            }
                            else if (templateSection.SectionTypeId == 4)
                            {
                                totalPercentageScore += currentResultSection.PercentageScore;
                                <div class="section-item"
                                     data-sectionTypeId="4"
                                     data-sectionId="@currentResultSection.Id"
                                     data-percentageScore="@templateSection.TotalPercentageObtainable"
                                     data-obtainableScore="@templateSection.TotalMarkObtainable">
                                    <h5 class="mt-4">Section @templateSection.SetupId</h5>
                                    <div class="table-responsive mb-4">
                                        <table class="table table-bordered table-vcenter">
                                            <thead>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th rowspan="2" colspan="@dutiesAssignCol">
                                                        <div class="font-size-h5 text-center">@templateSection.SectionTitle</div>
                                                        <div>@templateSection.SectionInstructions</div>
                                                    </th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr style="background-color:#e5e6e6;">
                                                    <th class="text-center text-uppercase" style="width:65%;" scope="row">
                                                        @((templateSection.FirstColumnHeader != "")? templateSection.FirstColumnHeader: "values")
                                                    </th>
                                                    <th class="text-center" style="width:70px">Weight</th>
                                                    <th class="text-uppercase text-center" colspan="@ratingsCount">ratings</th>
                                                </tr>
                                                <tr>
                                                    <th scope="row"></th>
                                                    <td></td>
                                                    @foreach (var item in Model.DefaultRatings)
                                                    {
                                                        <th class="text-center">@item.Score</th>
                                                    }
                                                </tr>
                                                @foreach (var detail in templateSection.InitiatedSectionDetails)
                                                {
                                                    var sectionDetailResult = currentResultSection.SectionDetailResults.Where(x => x.SectionDetailId == detail.Id).SingleOrDefault();
                                                    <tr class="task-row" data-sectionResultDetailId="@sectionDetailResult.Id">
                                                        <td>@detail.Title1</td>
                                                        <td class="text-center">@detail.MaxScore</td>
                                                        @foreach (var item in Model.DefaultRatings)
                                                        {
                                                            <td class="@(sectionDetailResult.Score == item.Score? "check": "")"></td>
                                                        }
                                                    </tr>
                                                }
                                            </tbody>
                                            <tfoot>
                                                <tr>
                                                    <td class="text-right font-w700">Mark Obtainable</td>
                                                    <td class="text-center font-w700">@templateSection.TotalMarkObtainable</td>
                                                    <td colspan="@ratingsCount" class="text-center font-w700"></td>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                    <div class="row score-section">
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-4">Total Score:</div>
                                                <div class="col-2 totalScore score">@currentResultSection.TotalScore</div>/
                                                <div class="col-2 score">@templateSection.TotalMarkObtainable</div>
                                            </div>
                                        </div>
                                        <div class="col-6">
                                            <div class="row">
                                                <div class="col-5">Percentage Score:</div>
                                                <div class="col-2 percentageScore score">@currentResultSection.PercentageScore</div>/
                                                @{
                                                    var sectionPercentage = templateSection.TotalPercentageObtainable;
                                                    var templateSectionSetupId = templateSection.SetupId;
                                                    var childSection = Model.InitiatedAppraisalTemplate.InitiatedTemplateSections
                                                                        .Where(x => x.IsDeleted == false &&
                                                                                x.DerivedSectionSetupId == templateSectionSetupId)
                                                                        .FirstOrDefault();
                                                    if (childSection != null)
                                                    {
                                                        var childResult = sectionResult.Where(x => x.InitiatedTemplateSectionId == childSection.Id).SingleOrDefault();
                                                        if (childResult.SectionFilled)
                                                        {
                                                            sectionPercentage = templateSection.TotalPercentageObtainable - childSection.TotalPercentageObtainable;
                                                        }
                                                    }
                                                }
                                                <div class="col-2 score percentageObtainable">@sectionPercentage %</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <hr />
                            }
                        }
                    }

                    @if (Model.InitiatedAppraisalTemplate.IncludeBdsTracker)
                    {
                        <div class="row mt-5" id="trackerSection">
                            <div class="table-responsive">
                                <table class="table table-bordered table-vcenter">
                                    <thead>
                                        <tr>
                                            <th class="text-center">Annual Target</th>
                                            <th class="text-center"><div>Expected RSA</div><span style="font-size:14px">(@Model.NewAppraisal.AppraisalPeriodStartDate.ToString("MMM") - @Model.NewAppraisal.AppraisalPeriodEndDate.ToString("MMM"))</span></th>
                                            <th class="text-center">RSA Achieved</th>
                                            <th class="text-center">Funded Pin <span style="font-size:14px">(@Model.NewAppraisal.AppraisalPeriodEndDate.ToString("yyyy") REG)</span></th>
                                            <th class="text-center">Pre-@Model.NewAppraisal.AppraisalPeriodStartDate.ToString("yyyy") Funded Pins</th>
                                            <th class="text-center">Cash Volume</th>
                                            <th class="text-center">% RSA Achieved</th>
                                            <th class="text-center">% Funding Achieved</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr>
                                            <td style="height:70px" class="text-center">@Model.BdsTracker.AnnualTarget</td>
                                            <td class="text-center">@Model.BdsTracker.ExpectedRSA</td>
                                            <td class="text-center">@Model.BdsTracker.RSAAchieved</td>
                                            <td class="text-center">@Model.BdsTracker.FundedPins</td>
                                            <td class="text-center">@Model.BdsTracker.PreFundedPins</td>
                                            <td style="width:150px" class="text-center">@Model.BdsTracker.CashVolume</td>
                                            <td class="text-center">@Model.BdsTracker.RSAAchievedPercentage%</td>
                                            <td class="text-center">@Model.BdsTracker.FundingAchievedPercentage%</td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }


                    <div class="row">
                        <div class="offset-2 col-8 p-5 my-5" style="border: 1px solid grey">
                            <div class="row">
                                <div class="offset-3 col-4 font-weight-bolder">Final Score:</div>
                                <div class="col-2 totalScore score font-weight-bolder">@totalPercentageScore%</div>
                            </div>
                        </div>
                    </div>
                    <div class="row mt-5">
                        <div class="offset-1 col-10 p-5" style="border:1px solid grey">
                            <div class="mb-2">
                                <span class="font-weight-bolder">Appraisee's Comments </span>
                                <span class="font-italic">
                                    (To include comments on the performance appraisal,
                                    factors affecting performance, possible requirements for improved performance,
                                    and aspiration in career development)
                                </span>
                            </div>
                            <textarea id="appraiseeComment" class="form-control" rows="6"></textarea>

                            <hr />
                            <div class="mt-3">
                                <span class="font-weight-bolder">Training Needs </span>
                            </div>
                            <textarea id="appraiseeTrainingNeeds" class="form-control" rows="3"></textarea>
                        </div>
                    </div>
                    <div class="row mt-4">
                        <div style="margin:auto">
                            <button class="btn btn-primary mr-4" id="submitAppraisal">
                                Submit
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- END Elements -->
</div>


@section Scripts {

    <script>
        $(function () {
            var $texts = $(".capitalize-text");
            $.each($texts, function () {
                $(this).text(capitalize($(this).text()));
            })
            function capitalize(text) {
                return text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();
            }

            // submit appraisal
            $("#submitAppraisal").on("click", function () {
                var $this = $(this);
                var $appraiseeId = parseInt($("#appraiseeId").text());
                var $appraiseeComment = $("#appraiseeComment").val();
                var $appraiseeTrainingNeeds = $("#appraiseeTrainingNeeds").val();
                if ($appraiseeComment == '') {
                    Swal.fire("Error!", "Sorry, you have not entered your comment.", "error");
                    return;
                }

                Swal.fire({
                    title: "Are you sure?",
                    text: "Are you sure you want to submit the comment?",
                    type: "warning",
                    showCancelButton: !0,
                    customClass: { confirmButton: "btn btn-danger m-1", cancelButton: "btn btn-secondary m-1" },
                    confirmButtonText: "Yes, Submit it!",
                    html: !1,
                    preConfirm: function (e) { return new Promise(function (e) { setTimeout(function () { e() }, 50) }) }

                }).then(function (n) {
                    if (n.value) {
                        Dashmix.layout('header_loader_on');
                        $this.attr("disabled", true);
                        //var url = "/api/Appraisal/PostEnterAppraiseeComment";
                        var url = '@Url.Action("PostEnterAppraiseeComment", "appraisal", new { httproute = "DefaultApi" })';

                        $.post(url, {
                            appraiseeId: $appraiseeId,
                            appraiseeComment: $appraiseeComment,
                            appraiseeTrainingNeeds: $appraiseeTrainingNeeds
                        }, function (data) {
                            Dashmix.layout('header_loader_off');
                            $this.attr("disabled", false);
                            Swal.fire({
                                title: "Success",
                                text: "This appraisal has been submitted",
                                type: "success",
                                showCancelButton: 0,
                                customClass: { okButton: "btn btn-danger m-1" },
                                html: !1,
                                preConfirm: function (e) { return new Promise(function (e) { setTimeout(function () { e() }, 50) }) }

                            }).then(function (n) {
                                if (n.value) {
                                    //window.location.href = '/appraisal/ongoing-appraisals-all';
                                    window.location.href = '@Url.Action("ongoing-appraisals-all", "appraisal")';
                                }
                            });
                        });
                    }
                    else {
                        "cancel" === n.dismiss && Swal.fire("Cancelled", "Submission cancelled", "error")
                    }
                });
            });


        })
        ////////////////////////////////////////////////////////////////////
    </script>
}


